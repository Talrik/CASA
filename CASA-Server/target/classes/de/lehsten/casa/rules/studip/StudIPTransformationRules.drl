package de.lehsten.casa.rules.studip.transformation
 
import de.lehsten.casa.contextserver.types.Entity;
import de.lehsten.casa.contextserver.types.entities.person.Person;
import de.lehsten.casa.contextserver.types.entities.event.Course;
import de.lehsten.casa.contextserver.types.entities.event.Lecture;
import de.lehsten.casa.contextserver.types.entities.place.Place;
import de.lehsten.casa.contextserver.types.entities.place.rooms.Room;
import de.lehsten.casa.contextserver.types.entities.place.Cafeteria;
import de.lehsten.casa.contextserver.types.entities.place.Building;
import de.lehsten.casa.contextserver.types.entities.device.MobilePhone;
import de.lehsten.casa.contextserver.types.position.MovementEvent;
import de.lehsten.casa.contextserver.types.entities.services.websites.EventWebsite;
import de.lehsten.casa.contextserver.types.entities.services.websites.Website;
import de.lehsten.casa.contextserver.types.entities.services.websites.LocationWebsite;

import de.lehsten.casa.rules.RulesLogger;

import java.util.Date;

/*
rule "HandleLocationUpdates"
	when
		m : MobilePhone()
		p : MovementEvent( deviceID == m.deviceID) from entry-point "StudIPEntryPoint"
	then
		System.out.println("LocationUpdate received.");
		modify(m){
			setLocation(p)
		}
		retract(p);
end	

rule "CafeteriaTest"
	when
		c : Cafeteria()
		m : MobilePhone( nearbyPlaces not contains c)
	then
		System.out.println("Cafeteria found");
		modify(m){
			addToNearbyPlaces(c);
		}
end	

rule "LactoseFreeMenuNotification" 
	when
		c : Cafeteria(lactosefree_menu_available == true)
		m : MobilePhone(notifications not contains c.lactosefree_menu, nearbyPlaces contains c )
//		p : Person( activeDevice == m, allergy == "lactose" )
	then
		System.out.println("Lactosefree Cafeteria found");
		m.addNotification(c.lactosefree_menu); 
end

//rule "HandleTutor"
//	when
//			e : Entity(properties.keySet() contains "Nachname")
//	then
//		System.out.println("Gefunden!!!");
//end		

*/
// Zuweisung der Veranstaltungen zu den Kursen - wird von dem DB-Gatherer automatisch gemacht

rule "ConnectLecturesWithCourses "
	when
		l : Lecture (isAssigned == false)   
		c : Course ( c.lectures not contains l, l.StudIP_ID == c.StudIP_ID)
	then
//		l.setisAssigned(true);
		c.addLecture(l); 
		RulesLogger.log(drools, l.getTitle() + " assigned to "+ c.getTitle() + " on " + l.getBeginDate());
end 

rule "ConnectLectureWithRooms"
	when
		r : Room($id : properties["resourceID"])
		l : Lecture(room == null , properties["resources"] == $id) 
		c : Course ( lectures contains l)
	then
		l.setRoom(r);
		c.addResource(r.getResource_id());
		RulesLogger.log(drools, l.getRoom().getTitle() + " assigned to "+ l.getTitle() + " on " + l.getBeginDate());
end

rule "ConnectPersonsWithCourses"
	when
		p : Person()
		c : Course( members not contains p, membersID contains p.properties["studIP_userID"])  
	then
		c.addMember(p);
		RulesLogger.log(drools,p.getFirstname()+" "+ p.getLastname()+ " takes "+c.getTitle());
end

rule "ConnectRoomsWithBuildings"
	when
		r : Room()
		b : Building( b.rooms not contains r, b.roomsID contains r.resource_id)  
	then
		b.addRoom(r);
		r.setBuilding(b);
		RulesLogger.log(drools,r.getTitle()+" is in "+b.getTitle());
end

rule "ConnectWebsitesWithLocations"
	when
		p : Place()
		w : Website(properties["StudIP_Location"] == p.title)
//		not EventWebsite (event == l)
		not LocationWebsite (properties["StudIP_Location"] == p.title && targetURL == w.targetURL)
	then		
		LocationWebsite s = new LocationWebsite(p);
		s.setTitle(w.getTitle());
		s.setProvider(w.getProvider());
		s.setTargetURL(w.getTargetURL());
		s.setDescription(w.getDescription());
		s.setSource("LocationWebsiteForLocation");
		s.addProperty("StudIP_Location", w.getProperties().get("StudIP_Location"));
		if (w.getRestrictions() != null){s.setRestrictions(w.getRestrictions());};
		insert(s);
		retract(w);
		RulesLogger.log(drools,s.getTitle()+" added to "+ p.getTitle());
end

rule "ConnectWebsitesWithEvents"
	when
		l : Lecture()
		w : Website(properties["StudIP_ID"] == l.StudIP_ID)
//		not EventWebsite (event == l)
		not EventWebsite (properties["StudIP_ID"] == l.StudIP_ID && targetURL == w.targetURL)
	then		
		EventWebsite s = new EventWebsite(l);
		s.setTitle(w.getTitle());
		s.setProvider(w.getProvider());
		s.setTargetURL(w.getTargetURL());
		s.setDescription(w.getDescription());
		s.setSource("EventWebsiteForEvent");
		s.addProperty("StudIP_ID", w.getProperties().get("StudIP_ID"));
		if (w.getRestrictions() != null){s.setRestrictions(w.getRestrictions());};
		insert(s);
		retract(w);
		RulesLogger.log(drools,s.getTitle()+" added to "+ l.getStudIP_ID());
end
