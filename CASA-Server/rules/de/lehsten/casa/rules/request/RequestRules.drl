//created on: 11.06.2014
package de.lehsten.casa.rules.request


import de.lehsten.casa.contextserver.types.Request;
import de.lehsten.casa.contextserver.types.QueryRequest;

import de.lehsten.casa.contextserver.types.Entity;
import de.lehsten.casa.contextserver.types.entities.event.Lecture;
import de.lehsten.casa.contextserver.types.entities.event.Event;
import de.lehsten.casa.contextserver.types.entities.place.Place;

import de.lehsten.casa.contextserver.types.entities.person.identity.Identity;
import de.lehsten.casa.contextserver.types.entities.person.identity.StudIPIdentity;

import org.drools.runtime.rule.QueryResults;
import org.drools.runtime.rule.QueryResultsRow;

import com.google.gson.Gson;

import java.util.ArrayList;
import java.util.Map;
import java.util.Iterator;

import de.lehsten.casa.rules.RulesLogger;


rule "HandleQueryRequest"
	when
		r : QueryRequest()
	then
		RulesLogger.log(drools, "Query-Request "+r.getRequestId()+" received.");
		Iterator it = r.getQuery().entrySet().iterator();
		ArrayList<Entity> list = new ArrayList<Entity>();
    	while (it.hasNext()) {
        	Map.Entry entry = (Map.Entry)it.next();
        	RulesLogger.log(drools,entry.getKey() + " = " + entry.getValue());
        	QueryResults queryResults = kcontext.getKnowledgeRuntime().getQueryResults(((String)entry.getKey()), ((Object[])entry.getValue()));
        	for ( QueryResultsRow row : queryResults ) {
					Entity e = ( Entity) row.get( "r" );
					if (!list.contains(e)){list.add(e);}
				}
    	}		
    	RulesLogger.log(drools,"QueryRequest "+r.getRequestId()+" handled. "+list.size()+" services found.");
		r.addProperty("HandleQueryRequest", "done");
		r.setResults(list);
end	

query "GetRequestById"(String id)
	r : Request(requestId.equals(id))
end


